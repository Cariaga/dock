don'ts
run docker in docker
run database in k8s cluster it should be next to it not inside it.
NodePorts are not designed for production LoadBalancer is still used
---


-------
https://buddy.works/guides/how-dockerize-node-application

the FROM node:latest inside docker file means the latest node

to build 
docker build -t hello-world .

to push or just set up a automated build from git
 docker login
  docker push [USERNAME]/hello-world

to run from uploaded image1
docker run -p 8081:8081 [USERNAME]/hello-world



----
for windows with minikube
seting up virutalbox version of kubernetees the  docker vm driver version don't always work with windows.
https://www.youtube.com/watch?v=Fr_mnfjkYsc

for windows that has manually installed ubuntu
setting up docker on ubuntu virtualbox or real machine without using minikube
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04
---

-----------
minikube
 minikube start 
 
more drivers for minikube
https://minikube.sigs.k8s.io/docs/drivers/

 minikube kubectl -- get pods
 minikube kubectl -- get svc

 minikube dashboard

 using minikube
 https://kubernetes.io/docs/tutorials/hello-minikube/

 if you want to make a website accessable you have to change it to NodePort you can find it under services in dashboard
 https://www.youtube.com/watch?v=je5WRKxOkWQ

to start in browser the app
 minikube service serviceName

to get information about the services
 kubectl describe services

 creating a Node port service
 kubectl expose deployment hello-world --type=NodePort --name=example-service

List the pods that are running the  application:
 kubectl get pods --output=wide
 
 
 PM2 is not good for in production we already have docker and kuberneetees
 https://www.docker.com/blog/keep-nodejs-rockin-in-docker/
 
 
 docker ps //To show only running containers
 
 get ip of container
 https://stackoverflow.com/questions/17157721/how-to-get-a-docker-containers-ip-address-from-the-host
 
 how to access docker ip virtual machine from outside 
 note you will need to set up as bridge if its on windows virutalbox running ubuntu
 https://stackoverflow.com/questions/33814696/how-to-connect-to-a-docker-container-from-outside-the-host-same-network-windo
 
 
 ----
 docker run -it --rm -p 8081:8081 --network=host cariaga/dock
 docker run -it --rm -p 0.0.0.0:8081:8081 cariaga/dock to run in all network interface

------
to get all Ip some of of it is probobly the container ip which you can access same machine 
the one that starts with 172 is a container ip 
the IP that starts with 192 can be accessed locally between computers even if you are on a bridge or host network it should work
 hostname -I
 
 you can also use ifconfig to get information over your network


---
stop and remove container
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
 
 remove all images
 docker rmi -f $(docker images -a -q)
 
 -----------
 kuberneetes 101
 https://medium.com/google-cloud/kubernetes-101-pods-nodes-containers-and-clusters-c1509e409e16
 
docker images can be run on their own or inside a cluster like kuberneetes


an easy way to get your url of your site
minikube service list


----------
Modifying a service to a NodePort is one way of making your app accessable but keep in mind this is within the host still
the url structure for NodePort is containerIP+Service GeneratedNodePort

while Using the LoadBalancer type of service will give you a new ip each time but keeping the port of the app
LoadBalancer type requries you to run a seperate terminal and run the command minikube tunnel
In LoadBalancer you will notice External Endpoint has a url for 
the url for LoadBalancer looks like 10.108RandomGenerated+yourAppExposedPort
but you can still access containerIP+ServiceGeneratedNodePort for the LoadBalancer Type
https://minikube.sigs.k8s.io/docs/handbook/accessing/
---------

minikube web apps can only be access on same machine not local network as of now


----

ingres nginx is still needed to expose kubernetees
